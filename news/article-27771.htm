<!doctype html>
<html lang="zh-CN" class="no-js">

<head>
        <link rel="canonical" href="https://matsurinode.github.io/news/article-27771.htm" />
    <!-- Required Meta Tags Start -->
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Spring 源码（2）Spring IOC 容器 前戏准备工作</title>
        <meta name="description" content="Spring 最重要的方法refresh方法 根据上一篇文章https://www.cnblogs.com/redwinter/p/16141285.htmlSpring Bean IOC 的创建流程" />
        <link rel="icon" href="/assets/website/img/matsurinode/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- Required Meta Tags End -->
    <!-- Favicon Tags Start -->
    <meta name="msapplication-TileColor" content="#2b5797">
    <meta name="theme-color" content="#ffffff">
    <!-- Favicon Tags End -->
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/matsurinode/bootstrap.css">
    <link rel="stylesheet" href="/assets/website/css/matsurinode/main.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-KMMQHM2EMD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-KMMQHM2EMD');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Add your site or application content here -->
    <!-- |==========================================| -->
    <!-- |=====|| Preloader Start ||===============| -->
    <div class="preloader">
        <div class="preloader__content">
            <div class="preloader__wrapper">
                <div class="preloader__spinner"></div>
                <div class="preloader__txt">
                    <span data-text-preloader="M" class="letters-loading">M</span>
                    <span data-text-preloader="a" class="letters-loading">a</span>
                    <span data-text-preloader="t" class="letters-loading">t</span>
                    <span data-text-preloader="s" class="letters-loading">s</span>
                    <span data-text-preloader="u" class="letters-loading">u</span>
                    <span data-text-preloader="r" class="letters-loading">r</span>
                    <span data-text-preloader="i" class="letters-loading">i</span>
                    <span data-text-preloader=" " class="letters-loading">&nbsp;</span>
                    <span data-text-preloader="n" class="letters-loading">n</span>
                    <span data-text-preloader="o" class="letters-loading">o</span>
                    <span data-text-preloader="d" class="letters-loading">d</span>
                    <span data-text-preloader="e" class="letters-loading">e</span>
                </div>
            </div>
        </div>
    </div>
    <!-- |=====|| Preloader End ||=================| -->
    <!-- |==========================================| -->
    <!-- |==========================================| -->
    <!-- |=====|| Header Start ||===============| -->
    <header class="header home1">
        <!-- Header Menu Start -->
        <div class="header__menu">
            <div class="header__menu-wrapper">
                <div class="container_xl_fluid">
                    <div class="header__menu-outer">
                        <div class="row">
                            <div class="col-xxl-3 col-lg-4">
                                <div class="header__logo">
                                    <a href="/">
                                                                            <span>Matsuri Node</span>
                                                                        </a>
                                </div>
                            </div>
                            <div class="col-xxl-6 col-lg-8">
                                <div class="main-menu text-xxl-center text-end">
                                    <nav id="mobile-menu">
                                        <ul>
                                                                                        <li><a href="/">首页</a></li>
                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                        <li><a href="#">关于</a></li>
                                            <li><a href="#">联系</a></li>
                                        </ul>
                                    </nav>
                                </div>
                                <div class="mobile-menu"></div>
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header Menu End -->
    </header>
    <!-- |=====|| Header End ||=================| -->
    <!-- |==========================================| -->
    <main>
        <!-- |==========================================| -->
        <!-- |=====|| Page Title Start ||===============| -->
        <section class="pageTitle1">
            <div class="pageTitle1__bg pageTitle1__bg__02"></div>
            <div class="pageTitle1__breadCrumb">
                <ul>
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li><span>正文</span></li>
                </ul>
            </div>
            <div class="pageTitle1__padding">
                <div class="container_m container_l">
                    <div class="row">
                        <div class="col-lg-7">
                            <div class="pageTitle1__heading">
                                <h1>Spring 源码（2）Spring IOC 容器 前戏准备工作</h1>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- |=====|| Page Title End ||=================| -->
        <!-- |==========================================| -->
        <!-- |==========================================| -->
        <!-- |==========================================| -->
        <!-- |=====|| About Start ||===============| -->
        <section class="about1 content_box_pot_120">
            <div class="content_box_pob_120">
                <div class="container_m container_l content_box_pob_120">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<h3 id="spring-最重要的方法refresh方法">Spring 最重要的方法refresh方法</h3> <p>根据上一篇文章<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/redwinter/p/16141285.html"  target="_blank" rel="nofollow">https://www.cnblogs.com/redwinter/p/16141285.html</a><code>Spring Bean IOC</code> 的创建流程继续解读<code>Spring</code>源码，本篇文章解读<code>Spring</code> 源码最重要的方法<code>refresh</code>方法。</p> <p>这个方法位于：AbstractApplicationContext#refresh，这个方法中总共有15个方法，Spring源码的精髓就是这15个方法中。</p> <pre><code class="language-java">@Override 	public void refresh() throws BeansException, IllegalStateException { 		synchronized (this.startupShutdownMonitor) { 			// Prepare this context for refreshing. 			// 准备工作,加载环境变量等操作 			// 1、设置容器启动时间 			// 2、设置停止状态为false 			// 3、设置活跃状态为true 			// 4、获取Environment对象，并设置属性值 			// 5、设置监听器和事件的集合，模式为空的集合 			prepareRefresh();  			// Tell the subclass to refresh the internal bean factory. 			// 告诉子类刷新内部 bean 工厂, 获取刷新bean的工厂: DefaultListableBeanFactory 			// 并且加载BeanDefinition 			ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();  			// Prepare the bean factory for use in this context. 			// 准备BeanFactory 设置一些属性 			prepareBeanFactory(beanFactory);  			try { 				// Allows post-processing of the bean factory in context subclasses.                  // 允许子类进行扩展BeanFactoryPostProcessor 				postProcessBeanFactory(beanFactory);  				// Invoke factory processors registered as beans in the context. 				// 实例化并执行BeanFactoryPostProcessor 				invokeBeanFactoryPostProcessors(beanFactory);  				// Register bean processors that intercept bean creation. 				// 实例化并注册BeanPostProcessor 				registerBeanPostProcessors(beanFactory);  				// Initialize message source for this context. 				// 国际化设置 				initMessageSource();  				// Initialize event multicaster for this context. 				// 实例化事件多播器 				initApplicationEventMulticaster();  				// Initialize other special beans in specific context subclasses. 				// 初始化特定上下文子类中的其他特殊bean，web容器 				onRefresh();  				// Check for listener beans and register them. 				// 检查listener bean 并注册它们 				// 注册监听器 				registerListeners();  				// Instantiate all remaining (non-lazy-init) singletons. 				// 实例化所有剩余的（非惰性初始化）单例。 				finishBeanFactoryInitialization(beanFactory);  				// Last step: publish corresponding event. 				// 发布相应的事件 				finishRefresh(); 			}  			catch (BeansException ex) { 				if (logger.isWarnEnabled()) { 					logger.warn("Exception encountered during context initialization - " + 							"cancelling refresh attempt: " + ex); 				}  				// Destroy already created singletons to avoid dangling resources. 				// 销毁Bean 				destroyBeans();  				// Reset 'active' flag. 				// 重置 active 标志 				cancelRefresh(ex);  				// Propagate exception to caller. 				throw ex; 			}  			finally { 				// Reset common introspection caches in Spring's core, since we 				// might not ever need metadata for singleton beans anymore... 				resetCommonCaches(); 			} 		} 	}</code></pre> <h3 id="前戏准备-preparerefresh-方法">前戏准备 prepareRefresh 方法</h3> <p>Spring的前戏准备大概就是做了以下几件事：</p> <ul> <li>设置容器的启动时间</li> <li>设置容器的停止状态为false</li> <li>设置容器的激活状态为true</li> <li>获取环境信息并验证必要的属性</li> <li>准备监听器和事件的容器</li> </ul> <pre><code class="language-java">protected void prepareRefresh() { 		// Switch to active. 		// 设置启动时间 设置标识位 		this.startupDate = System.currentTimeMillis(); 		// 设置容器停止标识为false 		this.closed.set(false); 		// 设置容器激活标识为true 		this.active.set(true); 		// Initialize any placeholder property sources in the context environment. 		// 初始化上下文环境中的任何占位符属性源 		// 留给子类进行扩展，比如添加必须的属性值验证 		initPropertySources();  		// Validate that all properties marked as required are resolvable: 		// see ConfigurablePropertyResolver#setRequiredProperties 		// 获取环境对象，并验证需要的属性 		getEnvironment().validateRequiredProperties();  		// Store pre-refresh ApplicationListeners... 		// 准备应用监听器和实践的容器初始化 		if (this.earlyApplicationListeners == null) { 			this.earlyApplicationListeners = new LinkedHashSet&lt;&gt;(this.applicationListeners); 		} 		else { 			// Reset local application listeners to pre-refresh state. 			// 如果不为空，那么就清空掉，并设置新的早期的监听器进去 			this.applicationListeners.clear(); 			this.applicationListeners.addAll(this.earlyApplicationListeners); 		} 		// Allow for the collection of early ApplicationEvents, 		// to be published once the multicaster is available... 		this.earlyApplicationEvents = new LinkedHashSet&lt;&gt;(); 	}</code></pre> <p>这里有个问题就是他的环境信息是何时设置进去的呢？</p> <p>实际上是在容器启动时调用了父类构造函数时设置进去的，<code>Environment</code>他是一个接口，他有个重要的实现类叫<code>StandardEnvironment</code> ，在Spring启动的时候就会使用这个类进行环境信息的加载，最终他会调用到<code>System#getProperties</code> 和<code>System#getenv</code>方法，然后将加载到属性放在Map中进行保存。</p> <p>大概的流程如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4cc909257a8bbe1a4a9d463937756c9d.jpg" alt="Spring 源码（2）Spring IOC 容器 前戏准备工作"></p> <p>标记的类就是<code>Environment</code>环境信息的加载过程调用的类，最终会调用到<code>System#getProperties</code> 和<code>System#getenv</code>方法，然后完成环境信息的加载，主要加载的信息就是系统的环境变量，比如在<code>Windows</code>中配置的环境变量或者启动类中使用<code>-D</code>参数配置的启动参数都会进行加载到<code>StandardEnvironment</code> 这个类中，类似于使用-<code>Dxxx.name=123</code>这种参数会加载到<code>systemProperties</code>中，配置的<code>windows</code>环境变量会加载<code>systemEnvironment</code>中。</p> <p>这个就是<code>Spring IOC</code> 创建的第一个方法的前戏准备工作，接下来解读默认的<code>BeanFactory</code>实现类<code>DefaultListableBeanFactory</code>的创建过程。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-27769.htm">springboot集成elasticsearch7.2</a></p>
                                        <p>下一个：<a href="/news/article-28245.htm">python提供了9个基本的数值运算操作符_Python学习笔记（三）Python基本数字类型及其简单操作（1）&#8230;</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-22-node-share-links.htm" title="Matsuri Node节点订阅每天更新20.2M/S免费节点订阅链接">Matsuri Node节点订阅每天更新20.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-26393.htm" title="给我讲一讲宫颈糜烂(宫颈糜烂的真相)">给我讲一讲宫颈糜烂(宫颈糜烂的真相)</a></li>
                        <li class="py-2"><a href="/news/article-27312.htm" title="天津宠物狗领养中心在哪里（天津狗狗领养中心地址）">天津宠物狗领养中心在哪里（天津狗狗领养中心地址）</a></li>
                        <li class="py-2"><a href="/news/article-29169.htm" title="女人养猫的十大坏处（女人养猫的十大坏处视频播放）">女人养猫的十大坏处（女人养猫的十大坏处视频播放）</a></li>
                        <li class="py-2"><a href="/news/article-18994.htm" title="领养宠物的平台有哪些（领养宠物免费的地方在哪里）">领养宠物的平台有哪些（领养宠物免费的地方在哪里）</a></li>
                        <li class="py-2"><a href="/news/article-30593.htm" title="那些年踩过的Java日期时间的坑">那些年踩过的Java日期时间的坑</a></li>
                        <li class="py-2"><a href="/news/article-27771.htm" title="Spring 源码（2）Spring IOC 容器 前戏准备工作">Spring 源码（2）Spring IOC 容器 前戏准备工作</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-24-node-share.htm" title="Matsuri Node节点订阅每天更新21.6M/S免费节点订阅链接">Matsuri Node节点订阅每天更新21.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-10-node-share-links.htm" title="Matsuri Node节点订阅每天更新19.2M/S免费节点订阅链接">Matsuri Node节点订阅每天更新19.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-27-free-high-speed-nodes.htm" title="Matsuri Node节点订阅每天更新22.4M/S免费节点订阅链接">Matsuri Node节点订阅每天更新22.4M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- |=====|| About End ||=================| -->
        <!-- |==========================================| -->
        <!-- |==========================================| -->
    </main>
        <!-- |==========================================| -->
    <!-- |=====|| Footer Start ||===============| -->
    <footer class="footer1">
        <div class="footer1__bottom">
            <div class="container_m_30 container_l">
                <div class="row">
                    <div class="col-md-12 col_padding">
                        <div class="footer1__bottom__copyRight text-center">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p><a href="/">Matsuri Node免费机场订阅节点官网</a> 版权所有 Powered by WordPress</p>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-8 col_padding">
                        <div class="footer1__bottom__nav text-center text-lg-start">
                            <a href="#">Customer Support</a>
                            <a href="#">Terms & Conditions</a>
                            <a href="#">Privacy Policy</a>
                        </div>
                    </div>
                    <div class="col-lg-4 col_padding">
                        <div class="footer1__bottom__social text-center text-lg-end">
                            <a href="#"><i class="fab fa-facebook-f"></i></a>
                            <a href="#"><i class="fab fa-twitter"></i></a>
                            <a href="#"><i class="fab fa-linkedin-in"></i></a>
                            <a href="#"><i class="fab fa-instagram"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- |=====|| Footer End ||=================| -->
    <!-- |==========================================| -->
    <!-- |==========================================| -->
    <!-- |=====|| ScrollToTop Start ||===============| -->
    <a href="#" class="scrollToTop">
        <i class="fas fa-level-up-alt"></i>
    </a>
    <!-- |=====|| ScrollToTop End ||=================| -->
    <!-- |==========================================| -->
    <!-- |==========================================| -->
    <!-- |=====|| All js here ||===============| -->
    <script src="/assets/website/js/frontend/matsurinode/modernizr-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery-3.6.2.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/popper.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.easing.1.3.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/plugins.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/slick.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.counterup.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.fancybox.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.meanmenu.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/one-page-nav-min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/feather.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
    <!-- |=====|| All js End ||=================| -->
    <!-- |==========================================| -->
</body>

</html>