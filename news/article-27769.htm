<!doctype html>
<html lang="zh-CN" class="no-js">

<head>
        <link rel="canonical" href="https://matsurinode.github.io/news/article-27769.htm" />
    <!-- Required Meta Tags Start -->
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>springboot集成elasticsearch7.2</title>
        <meta name="description" content="上篇文章我们讲解了elasticsearch的安装，这次我们来搞一下，如何在自己的项目中集成elasticsearch。 正常来讲spring-data中都会提供相应的starter，让我们方便的使用" />
        <link rel="icon" href="/assets/website/img/matsurinode/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- Required Meta Tags End -->
    <!-- Favicon Tags Start -->
    <meta name="msapplication-TileColor" content="#2b5797">
    <meta name="theme-color" content="#ffffff">
    <!-- Favicon Tags End -->
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/matsurinode/bootstrap.css">
    <link rel="stylesheet" href="/assets/website/css/matsurinode/main.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-KMMQHM2EMD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-KMMQHM2EMD');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Add your site or application content here -->
    <!-- |==========================================| -->
    <!-- |=====|| Preloader Start ||===============| -->
    <div class="preloader">
        <div class="preloader__content">
            <div class="preloader__wrapper">
                <div class="preloader__spinner"></div>
                <div class="preloader__txt">
                    <span data-text-preloader="M" class="letters-loading">M</span>
                    <span data-text-preloader="a" class="letters-loading">a</span>
                    <span data-text-preloader="t" class="letters-loading">t</span>
                    <span data-text-preloader="s" class="letters-loading">s</span>
                    <span data-text-preloader="u" class="letters-loading">u</span>
                    <span data-text-preloader="r" class="letters-loading">r</span>
                    <span data-text-preloader="i" class="letters-loading">i</span>
                    <span data-text-preloader=" " class="letters-loading">&nbsp;</span>
                    <span data-text-preloader="n" class="letters-loading">n</span>
                    <span data-text-preloader="o" class="letters-loading">o</span>
                    <span data-text-preloader="d" class="letters-loading">d</span>
                    <span data-text-preloader="e" class="letters-loading">e</span>
                </div>
            </div>
        </div>
    </div>
    <!-- |=====|| Preloader End ||=================| -->
    <!-- |==========================================| -->
    <!-- |==========================================| -->
    <!-- |=====|| Header Start ||===============| -->
    <header class="header home1">
        <!-- Header Menu Start -->
        <div class="header__menu">
            <div class="header__menu-wrapper">
                <div class="container_xl_fluid">
                    <div class="header__menu-outer">
                        <div class="row">
                            <div class="col-xxl-3 col-lg-4">
                                <div class="header__logo">
                                    <a href="/">
                                                                            <span>Matsuri Node</span>
                                                                        </a>
                                </div>
                            </div>
                            <div class="col-xxl-6 col-lg-8">
                                <div class="main-menu text-xxl-center text-end">
                                    <nav id="mobile-menu">
                                        <ul>
                                                                                        <li><a href="/">首页</a></li>
                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                        <li><a href="#">关于</a></li>
                                            <li><a href="#">联系</a></li>
                                        </ul>
                                    </nav>
                                </div>
                                <div class="mobile-menu"></div>
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header Menu End -->
    </header>
    <!-- |=====|| Header End ||=================| -->
    <!-- |==========================================| -->
    <main>
        <!-- |==========================================| -->
        <!-- |=====|| Page Title Start ||===============| -->
        <section class="pageTitle1">
            <div class="pageTitle1__bg pageTitle1__bg__02"></div>
            <div class="pageTitle1__breadCrumb">
                <ul>
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li><span>正文</span></li>
                </ul>
            </div>
            <div class="pageTitle1__padding">
                <div class="container_m container_l">
                    <div class="row">
                        <div class="col-lg-7">
                            <div class="pageTitle1__heading">
                                <h1>springboot集成elasticsearch7.2</h1>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- |=====|| Page Title End ||=================| -->
        <!-- |==========================================| -->
        <!-- |==========================================| -->
        <!-- |==========================================| -->
        <!-- |=====|| About Start ||===============| -->
        <section class="about1 content_box_pot_120">
            <div class="content_box_pob_120">
                <div class="container_m container_l content_box_pob_120">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>上篇文章我们讲解了elasticsearch的安装，这次我们来搞一下，如何在自己的项目中集成elasticsearch。 正常来讲spring-data中都会提供相应的starter，让我们方便的使用各种Template操作对应的组件，比如常用RedisTemplate, JdbcTemplate等，其实spring-data中也提供的相应的elasticsearch的对应工具。但是我这里并没有使用，而是直接使用的elasticsearch原生api实现的。为什么这么做呢，因为spring-data-elasticsearch 最新的版本3.2，最高支持的elasticsearch版本为6.8， 而我们用的是7.2的版本，并且官方建议我们使用的jar版本最好和软件版本一致。</p> <p><img fetchpriority="high" decoding="async" alt="" height="732" src="http://img.555519.xyz/uploads3/20220602/c6f3a84657cbed68fc7016bceb42568e.jpg"></p> <p><img decoding="async" alt="" height="798" src="http://img.555519.xyz/uploads3/20220602/a11ecaf436657c56d37685b60a8a19fb.jpg"></p> <p>还有一个问题， 是关于客户端的， spring-data-elasticsearch中默认使用的是TransportClient, 这个客户端在7这个版本中已经不再建议使用了，并且将会在8的版本中彻底移除。而我们用的是7这个版本，目前推荐使用的elasticsearch的高级客户端，HighLevelRestClient. spring-data-es中声明会一直支持TransportClient，只要你的这个es版本支持。当然，spring-data-es中也是支持高级别客户端的，但是还有由于支持版本过低的问题，所以我最后还是决定采用原生客户端。如果大家用的es版本比较低，还是可以使用spring-data-es的。</p> <p><img decoding="async" alt="" height="582" src="http://img.555519.xyz/uploads3/20220602/72853e63d536db1e7629a3fbd3f5ca71.jpg"></p> <p><img loading="lazy" decoding="async" alt="" height="986" src="http://img.555519.xyz/uploads3/20220602/af7450136695a7dfc190773cab92b954.jpg"></p> <p>接下来我们来集成项目，集成之前，大家需要了解一下es中的一些专有名词，比如什么是索引，类型，文档，同时你要了解es是干什么用的。es最主要的功能就是查询，也就是他查东西的速度非常快，并且支持分词，全文检索。如果我们在mysql中查询一遍文章的内容，其实是非常痛苦的，我们可能必须得使用 like 或者拼接or去查询多个字段，并且有些场景是无法实现的，比如你的文章中的内容中包含 ”一朵鲜花“， 而你去搜索 ”一朵花“ 这种情况你是查不到的，但是es可以，因为es可以分词， 他会一朵鲜花， 分成&nbsp; ”一朵“&nbsp; ”鲜花“ 两个词，再把 ”一朵花“ 分成&nbsp; ”一朵“ 和 ”花“&nbsp; （注： 这里是个人方便理解，可能具体分词不是这么分的，大家领悟精髓）。 就很容易做到查询。 同时es查询的比较快，也是因为他的内部采用了倒叙索引，关于倒叙索引的原理，大家可以去找找资料，这里就不展开说了。</p> <p>一。 引入jar包</p> <pre><code>        &lt;dependency&gt;             &lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt;             &lt;artifactId&gt;elasticsearch-rest-high-level-client&lt;/artifactId&gt;             &lt;version&gt;7.2.0&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt;             &lt;artifactId&gt;elasticsearch-rest-client&lt;/artifactId&gt;             &lt;version&gt;7.2.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.elasticsearch&lt;/groupId&gt;             &lt;artifactId&gt;elasticsearch&lt;/artifactId&gt;             &lt;version&gt;7.2.0&lt;/version&gt;         &lt;/dependency&gt;</code></pre> <p>二。封装工具类，这里主要使用高级别客户端封装， 主要封装了创建索引，判断索引是否存在，删除索引， 插入文档的功能，还有一些高级功能还没有 研究完，比如高亮和分页，我会一边研究一边更新，先给出一些简单的操作demo.后续文章我们在深入展开。</p> <pre><code class="language-java">@Component @Slf4j public class EsUtil {      @Resource     private RestHighLevelClient restHighLevelClient;       /**      * 创建索引(默认分片数为5和副本数为1)      * @param indexName      * @throws IOException      */     public boolean createIndex(String indexName) throws IOException {         CreateIndexRequest request = new CreateIndexRequest(indexName);         request.settings(Settings.builder()                 // 设置分片数为3， 副本为2                 .put("index.number_of_shards", 3)                 .put("index.number_of_replicas", 2)         );         request.mapping(generateBuilder());         CreateIndexResponse response = restHighLevelClient.indices().create(request, RequestOptions.DEFAULT);         // 指示是否所有节点都已确认请求         boolean acknowledged = response.isAcknowledged();         // 指示是否在超时之前为索引中的每个分片启动了必需的分片副本数         boolean shardsAcknowledged = response.isShardsAcknowledged();         if (acknowledged || shardsAcknowledged) {             log.info("创建索引成功！索引名称为{}", indexName);             return true;         }         return false;     }        /**      * 判断索引是否存在      * @param indexName      * @return      */     public boolean isIndexExists(String indexName){         boolean exists = false;         try {             GetIndexRequest getIndexRequest = new GetIndexRequest(indexName);             getIndexRequest.humanReadable(true);             exists = restHighLevelClient.indices().exists(getIndexRequest,RequestOptions.DEFAULT);         } catch (IOException e) {             e.printStackTrace();         }         return exists;     }      /**      * 删除索引      * @param indexName      * @return      */     public boolean delIndex(String indexName){         boolean acknowledged = false;         try {             DeleteIndexRequest deleteIndexRequest = new DeleteIndexRequest(indexName);             deleteIndexRequest.indicesOptions(IndicesOptions.LENIENT_EXPAND_OPEN);             AcknowledgedResponse delete = restHighLevelClient.indices().delete(deleteIndexRequest, RequestOptions.DEFAULT);             acknowledged = delete.isAcknowledged();         } catch (IOException e) {             e.printStackTrace();         }         return acknowledged;     }      /**      * 更新索引(默认分片数为5和副本数为1)：      * 只能给索引上添加一些不存在的字段      * 已经存在的映射不能改      *      * @param clazz 根据实体自动映射es索引      * @throws IOException      */     public boolean updateIndex(Class clazz) throws Exception {         Document declaredAnnotation = (Document )clazz.getDeclaredAnnotation(Document.class);         if(declaredAnnotation == null){             throw new Exception(String.format("class name: %s can not find Annotation [Document], please check", clazz.getName()));         }         String indexName = declaredAnnotation.index();         PutMappingRequest request = new PutMappingRequest(indexName);          request.source(generateBuilder(clazz));         AcknowledgedResponse response = restHighLevelClient.indices().putMapping(request, RequestOptions.DEFAULT);         // 指示是否所有节点都已确认请求         boolean acknowledged = response.isAcknowledged();          if (acknowledged ) {             log.info("更新索引索引成功！索引名称为{}", indexName);             return true;         }         return false;     }      /**      * 添加单条数据      * 提供多种方式：      *  1. json      *  2. map      *      Map&lt;String, Object&gt; jsonMap = new HashMap&lt;&gt;();      *      jsonMap.put("user", "kimchy");      *      jsonMap.put("postDate", new Date());      *      jsonMap.put("message", "trying out Elasticsearch");      *      IndexRequest indexRequest = new IndexRequest("posts")      *          .id("1").source(jsonMap);      *  3. builder      *      XContentBuilder builder = XContentFactory.jsonBuilder();      *      builder.startObject();      *      {      *          builder.field("user", "kimchy");      *          builder.timeField("postDate", new Date());      *          builder.field("message", "trying out Elasticsearch");      *      }      *      builder.endObject();      *      IndexRequest indexRequest = new IndexRequest("posts")      *      .id("1").source(builder);      * 4. source:      *      IndexRequest indexRequest = new IndexRequest("posts")      *     .id("1")      *     .source("user", "kimchy",      *         "postDate", new Date(),      *         "message", "trying out Elasticsearch");      *      *   报错：  Validation Failed: 1: type is missing;      *      加入两个jar包解决      *      * @return      */     public IndexResponse add(String indexName, Object o) throws IOException {         IndexRequest request = new IndexRequest(indexName);         String userJson = JSON.toJSONString(o);         request.source(userJson, XContentType.JSON);         IndexResponse indexResponse = restHighLevelClient.index(request, RequestOptions.DEFAULT);         return indexResponse;     }      private XContentBuilder generateBuilder() throws IOException {         XContentBuilder builder = XContentFactory.jsonBuilder();         builder.startObject();         {             builder.startObject("properties");             {                 // es7及以后去掉了映射类型--person                 builder.startObject("name");                     {                         builder.field("type", "text");                         builder.field("analyzer", "ik_smart");                     }                     builder.endObject();             }             {                 builder.startObject("age");                 {                     builder.field("type", "integer");                 }                 builder.endObject();             }             {                 builder.startObject("desc");                 {                     builder.field("type", "text");                     builder.field("analyzer", "ik_smart");                 }                 builder.endObject();             }             {                 builder.startObject("id");                 {                     builder.field("type", "integer");                 }                 builder.endObject();             }             builder.endObject();         }         builder.endObject();         /*.startObject().field("properties")             .startObject().field("person")                 .startObject("name")                     .field("type" , "text")                     .field("analyzer", "ik_smart")                 .endObject()                 .startObject("age")                     .field("type" , "int")                 .endObject()                 .startObject("desc")                     .field("type", "text")                     .field("analyzer", "ik_smart")                 .endObject()             .endObject()         .endObject();*/         return builder;     }    }</code></pre> <p>上面工具类中给出的索引结构是一个用户，只有id, name , age, desc 四个简单字段的结构</p> <p>同时desc字段和姓名字段都是使用的ik-smart做的分词。</p> <p>接下来大家就可以使用controller或者junittest来进行调用, 配合head插件观察数据。 整体的大致流程就是， index定义索引结构，然后我们把按格式数据存到es中， 使用es提供的高效api来做查询。 这篇文章先到这里，其实这里有一个痛点就是如果我们的数据结构比较复杂， 那么我们在创建索引的时候可能需要写出大量的代码，四个字段就这么多</p> <p><img loading="lazy" decoding="async" alt="" height="1200" src="http://img.555519.xyz/uploads3/20220602/5e5f90ff3993274657729e4a391eda09.jpg"></p> <p>所以这里其实我们可以根据实体的结构自动设计索引结构，像spring-data-es中就是根据我们在实体类上的注解，自动创建索引的。我这里也实现了自定义注解来创建es索引结构的方法，下一篇文章给大家介绍一下。</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-27312.htm">天津宠物狗领养中心在哪里（天津狗狗领养中心地址）</a></p>
                                        <p>下一个：<a href="/news/article-27771.htm">Spring 源码（2）Spring IOC 容器 前戏准备工作</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-8-free-node-subscribe-links.htm" title="Matsuri Node节点订阅每天更新19.3M/S免费节点订阅链接">Matsuri Node节点订阅每天更新19.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-20848.htm" title="被猫抓伤以后多长时间打疫苗有效（被猫抓了之后多长时间打疫苗）">被猫抓伤以后多长时间打疫苗有效（被猫抓了之后多长时间打疫苗）</a></li>
                        <li class="py-2"><a href="/news/article-28246.htm" title="我被猫咬了,没去***,会不会死狂犬病（被猫咬了没打狂犬疫苗会死吗）">我被猫咬了,没去***,会不会死狂犬病（被猫咬了没打狂犬疫苗会死吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-13-free-subscribe-node.htm" title="Matsuri Node节点订阅每天更新18.8M/S免费节点订阅链接">Matsuri Node节点订阅每天更新18.8M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-6-node-share.htm" title="Matsuri Node节点订阅每天更新19.9M/S免费节点订阅链接">Matsuri Node节点订阅每天更新19.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-free-node-subscribe-links.htm" title="Matsuri Node节点订阅每天更新20.3M/S免费节点订阅链接">Matsuri Node节点订阅每天更新20.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-20847.htm" title="开动物医院需要具备哪些条件和要求证件（开动物医院什么资质）">开动物医院需要具备哪些条件和要求证件（开动物医院什么资质）</a></li>
                        <li class="py-2"><a href="/news/article-22680.htm" title="kafka开机自启动配置">kafka开机自启动配置</a></li>
                        <li class="py-2"><a href="/news/article-19932.htm" title="吉泰实业（吉泰置业）">吉泰实业（吉泰置业）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-20-free-node-subscribe.htm" title="Matsuri Node节点订阅每天更新22M/S免费节点订阅链接">Matsuri Node节点订阅每天更新22M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- |=====|| About End ||=================| -->
        <!-- |==========================================| -->
        <!-- |==========================================| -->
    </main>
        <!-- |==========================================| -->
    <!-- |=====|| Footer Start ||===============| -->
    <footer class="footer1">
        <div class="footer1__bottom">
            <div class="container_m_30 container_l">
                <div class="row">
                    <div class="col-md-12 col_padding">
                        <div class="footer1__bottom__copyRight text-center">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p><a href="/">Matsuri Node免费机场订阅节点官网</a> 版权所有 Powered by WordPress</p>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-8 col_padding">
                        <div class="footer1__bottom__nav text-center text-lg-start">
                            <a href="#">Customer Support</a>
                            <a href="#">Terms & Conditions</a>
                            <a href="#">Privacy Policy</a>
                        </div>
                    </div>
                    <div class="col-lg-4 col_padding">
                        <div class="footer1__bottom__social text-center text-lg-end">
                            <a href="#"><i class="fab fa-facebook-f"></i></a>
                            <a href="#"><i class="fab fa-twitter"></i></a>
                            <a href="#"><i class="fab fa-linkedin-in"></i></a>
                            <a href="#"><i class="fab fa-instagram"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- |=====|| Footer End ||=================| -->
    <!-- |==========================================| -->
    <!-- |==========================================| -->
    <!-- |=====|| ScrollToTop Start ||===============| -->
    <a href="#" class="scrollToTop">
        <i class="fas fa-level-up-alt"></i>
    </a>
    <!-- |=====|| ScrollToTop End ||=================| -->
    <!-- |==========================================| -->
    <!-- |==========================================| -->
    <!-- |=====|| All js here ||===============| -->
    <script src="/assets/website/js/frontend/matsurinode/modernizr-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery-3.6.2.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/popper.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.easing.1.3.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/plugins.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/slick.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.counterup.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.fancybox.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/jquery.meanmenu.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/one-page-nav-min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/feather.min.js"></script>
    <script src="/assets/website/js/frontend/matsurinode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
    <!-- |=====|| All js End ||=================| -->
    <!-- |==========================================| -->
</body>

</html>